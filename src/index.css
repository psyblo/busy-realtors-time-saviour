// index.tsx (full updated code with Apply Changes button)
import React, { useEffect, useMemo, useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import prompts from "./prompts.json"; // make sure this file exists with your 230 prompts

export type Prompt = {
  id: string;
  title: string;
  category: string;
  keywords: string[];
  body: string;
};

function applyVars(body: string, vars: Record<string, string>) {
  return body.replace(/\[(.+?)\]/g, (_, key) => vars[key] ?? `[${key}]`);
}

function PromptCard({ p, vars }: { p: Prompt; vars: Record<string, string> }) {
  const filled = applyVars(p.body, vars);
  return (
    <motion.div
      layout
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -10 }}
      className="rounded-2xl border border-white/10 bg-white/5 backdrop-blur-xl p-5 shadow"
    >
      <div className="flex justify-between">
        <div>
          <div className="text-[11px] uppercase tracking-wide text-white/60">{p.category}</div>
          <h3 className="text-lg font-semibold text-white">{p.title}</h3>
        </div>
      </div>
      <p className="mt-3 text-sm text-white/85 whitespace-pre-wrap">{filled}</p>
      <div className="mt-3 flex flex-wrap gap-1">
        {p.keywords.map((k) => (
          <span key={k} className="text-[11px] px-2 py-0.5 rounded-full border border-white/10 bg-white/10 text-white/70">
            #{k}
          </span>
        ))}
      </div>
    </motion.div>
  );
}

export default function App() {
  const [data] = useState<Prompt[]>(prompts);
  const [q, setQ] = useState("");
  const [vars, setVars] = useState<Record<string, string>>({
    "property type": "house",
    city: "Miami",
    bedrooms: "3",
    bathrooms: "2",
    "key features": "ocean view, smart-home",
    "lifestyle benefits": "walking distance to cafes",
  });
  const [appliedVars, setAppliedVars] = useState(vars);

  const results = useMemo(() => {
    return data.filter((p) => {
      if (q.trim()) {
        const hay = (p.title + " " + p.body + " " + p.keywords.join(" ")).toLowerCase();
        return hay.includes(q.toLowerCase());
      }
      return true;
    });
  }, [q, data]);

  return (
    <div className="min-h-screen bg-[#0b0f17] text-white">
      <header className="p-6">
        <h1 className="text-3xl font-bold">Busy Realtors Time Saver</h1>
        <p className="text-white/70 text-sm mt-1">Instant Real Estate Prompts • Fill → Apply → Copy</p>
      </header>

      <main className="max-w-7xl mx-auto grid grid-cols-1 xl:grid-cols-[320px_1fr] gap-6 p-6">
        {/* Sidebar - Variables */}
        <aside className="rounded-2xl border border-white/10 bg-white/5 p-5 backdrop-blur">
          <h3 className="font-semibold mb-4">Listing Details</h3>
          <div className="space-y-3">
            {Object.entries(vars).map(([k, v]) => (
              <div key={k}>
                <label className="text-xs text-white/60 block mb-1">[{k}]</label>
                <input
                  className="w-full rounded-lg bg-[#0b0f17] border border-white/20 px-2 py-1 text-sm"
                  value={v}
                  onChange={(e) => setVars((prev) => ({ ...prev, [k]: e.target.value }))}
                />
              </div>
            ))}
          </div>
          <button
            onClick={() => setAppliedVars(vars)}
            className="mt-4 w-full px-4 py-2 rounded-lg bg-gradient-to-r from-[#12D6DF] to-[#7C9CFF] font-semibold text-black"
          >
            Apply Changes
          </button>
        </aside>

        {/* Results */}
        <section>
          <div className="mb-6">
            <input
              className="w-full rounded-lg bg-[#0b0f17] border border-white/20 px-3 py-2 text-sm"
              placeholder="Search prompts..."
              value={q}
              onChange={(e) => setQ(e.target.value)}
            />
          </div>
          <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-4">
            <AnimatePresence>
              {results.map((p) => (
                <PromptCard key={p.id} p={p} vars={appliedVars} />
              ))}
            </AnimatePresence>
          </div>
        </section>
      </main>
    </div>
  );
}
